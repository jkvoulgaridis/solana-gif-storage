{"ast":null,"code":"import _asyncToGenerator from \"/home/john/personal/solana-learnings/frontend-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/john/personal/solana-learnings/frontend-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/john/personal/solana-learnings/frontend-app/src/App.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\n//import logo from './logo.svg';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport kp from './keypair.json';\nimport idl from './idl.json';\nimport { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\nimport { Program, AnchorProvider, web3 } from '@project-serum/anchor'; // Constants\n\nvar TWITTER_HANDLE = '_buildspace';\nvar TWITTER_LINK = \"https://twitter.com/\".concat(TWITTER_HANDLE);\nvar TEST_GIFS = ['https://i.giphy.com/media/eIG0HfouRQJQr1wBzz/giphy.webp', 'https://media3.giphy.com/media/L71a8LW2UrKwPaWNYM/giphy.gif?cid=ecf05e47rr9qizx2msjucl1xyvuu47d7kf25tqt2lvo024uo&rid=giphy.gif&ct=g', 'https://media4.giphy.com/media/AeFmQjHMtEySooOc8K/giphy.gif?cid=ecf05e47qdzhdma2y3ugn32lkgi972z9mpfzocjj6z1ro4ec&rid=giphy.gif&ct=g', 'https://i.giphy.com/media/PAqjdPkJLDsmBRSYUp/giphy.webp'];\nvar SystemProgram = web3.SystemProgram,\n    Keypair = web3.Keypair; // Create a keypair for the account that will hold the GIF data.\n\nvar arr = Object.values(kp._keypair.secretKey);\nvar secret = new Uint8Array(arr);\nvar baseAccount = web3.Keypair.fromSecretKey(secret); // Get our program's id from the IDL file.\n\nvar programID = new PublicKey(idl.metadata.address); // Set our network to devnet.\n\nvar network = clusterApiUrl('devnet'); // Controls how we want to acknowledge when a transaction is \"done\".\n\nvar opts = {\n  preflightCommitment: \"processed\"\n};\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      walletAddress = _useState2[0],\n      setWalletAddress = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputValue = _useState4[0],\n      setInputValue = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      gifList = _useState6[0],\n      setGifList = _useState6[1];\n\n  var checkIfwalletIsConnected = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _window, solana, response;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _window = window, solana = _window.solana;\n\n              if (!solana) {\n                _context.next = 12;\n                break;\n              }\n\n              if (!solana.isPhantom) {\n                _context.next = 10;\n                break;\n              }\n\n              console.log(\"Phantom wallet found!\");\n              _context.next = 7;\n              return solana.connect();\n\n            case 7:\n              response = _context.sent;\n              console.log('Connected with Public Key:', response.publicKey.toString());\n              setWalletAddress(response.publicKey.toString());\n\n            case 10:\n              _context.next = 13;\n              break;\n\n            case 12:\n              alert(\"Download phantom wallet extension\");\n\n            case 13:\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 15]]);\n    }));\n\n    return function checkIfwalletIsConnected() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var onLoad = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return checkIfwalletIsConnected();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function onLoad() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    window.addEventListener('load', onLoad);\n    return function () {\n      return window.removeEventListener('load', onLoad);\n    };\n  }, []);\n\n  var getProvider = function getProvider() {\n    var connection = new Connection(network, opts.preflightCommitment);\n    var provider = new AnchorProvider(connection, window.solana, opts.preflightCommitment);\n    return provider;\n  };\n\n  var getGifList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var provider, program, account;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              provider = getProvider();\n              program = new Program(idl, programID, provider);\n              _context3.next = 5;\n              return program.account.baseAccount.fetch(baseAccount.publicKey);\n\n            case 5:\n              account = _context3.sent;\n              console.log(\"Got the account\", account);\n              setGifList(account.gifList);\n              _context3.next = 14;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(\"Error in getGifList: \", _context3.t0);\n              setGifList(null);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    }));\n\n    return function getGifList() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (walletAddress) {\n      console.log('Fetching GIF list...');\n      getGifList();\n    }\n  }, [walletAddress]);\n\n  var connectWallet = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function connectWallet() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var sendGif = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var provider, program;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(inputValue.length === 0)) {\n                _context5.next = 3;\n                break;\n              }\n\n              console.log(\"No gif link given!\");\n              return _context5.abrupt(\"return\");\n\n            case 3:\n              setInputValue('');\n              console.log('Gif link:', inputValue);\n              _context5.prev = 5;\n              provider = getProvider();\n              program = new Program(idl, programID, provider);\n              _context5.next = 10;\n              return program.rpc.addGif(inputValue, {\n                accounts: {\n                  baseAccount: baseAccount.publicKey,\n                  user: provider.wallet.publicKey\n                }\n              });\n\n            case 10:\n              console.log(\"GIF successfully sent to program\", inputValue);\n              _context5.next = 13;\n              return getGifList();\n\n            case 13:\n              _context5.next = 18;\n              break;\n\n            case 15:\n              _context5.prev = 15;\n              _context5.t0 = _context5[\"catch\"](5);\n              console.log(\"Error sending GIF:\", _context5.t0);\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[5, 15]]);\n    }));\n\n    return function sendGif() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  /*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */\n\n\n  var renderNotConnectedContainer = function renderNotConnectedContainer() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"cta-button connect-wallet-button\",\n      onClick: connectWallet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, \"Connect to Wallet\");\n  };\n\n  var onInputChange = function onInputChange(event) {\n    var value = event.target.value;\n    setInputValue(value);\n  };\n\n  var createGifAccount = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var provider, program;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              provider = getProvider();\n              program = new Program(idl, programID, provider);\n              console.log(\"ping\");\n              _context6.next = 6;\n              return program.rpc.startStuffOff({\n                accounts: {\n                  baseAccount: baseAccount.publicKey,\n                  user: provider.wallet.publicKey,\n                  systemProgram: SystemProgram.programId\n                },\n                signers: [baseAccount]\n              });\n\n            case 6:\n              console.log(\"Created a new BaseAccount w/ address:\", baseAccount.publicKey.toString());\n              _context6.next = 9;\n              return getGifList();\n\n            case 9:\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(\"Error creating BaseAccount account:\", _context6.t0);\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 11]]);\n    }));\n\n    return function createGifAccount() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var renderConnectedContainer = function renderConnectedContainer() {\n    // If we hit this, it means the program account hasn't been initialized.\n    if (gifList === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"connected-container\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"cta-button submit-gif-button\",\n        onClick: createGifAccount,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 12\n        }\n      }, \"Do One-Time Initialization For GIF Program Account\"));\n    } // Otherwise, we're good! Account exists. User can submit GIFs.\n    else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"connected-container\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          sendGif();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter gif link!\",\n        value: inputValue,\n        onChange: onInputChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 14\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"cta-button submit-gif-button\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 14\n        }\n      }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gif-grid\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 12\n        }\n      }, gifList.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"gif-item\",\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: item.gifLink,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 18\n          }\n        }));\n      })));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: walletAddress ? 'authed-container' : 'container',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDDBC GIF Portal\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, \"View your GIF collection in the metaverse \\u2728\"), !walletAddress ? renderNotConnectedContainer() : renderConnectedContainer()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Twitter Logo\",\n    className: \"twitter-logo\",\n    src: twitterLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"footer-text\",\n    href: TWITTER_LINK,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"built on @\".concat(TWITTER_HANDLE)))));\n};\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","kp","idl","Connection","PublicKey","clusterApiUrl","Program","AnchorProvider","web3","TWITTER_HANDLE","TWITTER_LINK","TEST_GIFS","SystemProgram","Keypair","arr","Object","values","_keypair","secretKey","secret","Uint8Array","baseAccount","fromSecretKey","programID","metadata","address","network","opts","preflightCommitment","App","walletAddress","setWalletAddress","inputValue","setInputValue","gifList","setGifList","checkIfwalletIsConnected","window","solana","isPhantom","console","log","connect","response","publicKey","toString","alert","onLoad","addEventListener","removeEventListener","getProvider","connection","provider","getGifList","program","account","fetch","connectWallet","sendGif","length","rpc","addGif","accounts","user","wallet","renderNotConnectedContainer","onInputChange","event","value","target","createGifAccount","startStuffOff","systemProgram","programId","signers","renderConnectedContainer","preventDefault","map","item","index","gifLink","twitterLogo"],"sources":["/home/john/personal/solana-learnings/frontend-app/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\n\nimport kp from './keypair.json'\n\n\nimport idl from './idl.json';\nimport { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\nimport { Program, AnchorProvider, web3 } from '@project-serum/anchor';\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst TEST_GIFS = [\n\t'https://i.giphy.com/media/eIG0HfouRQJQr1wBzz/giphy.webp',\n\t'https://media3.giphy.com/media/L71a8LW2UrKwPaWNYM/giphy.gif?cid=ecf05e47rr9qizx2msjucl1xyvuu47d7kf25tqt2lvo024uo&rid=giphy.gif&ct=g',\n\t'https://media4.giphy.com/media/AeFmQjHMtEySooOc8K/giphy.gif?cid=ecf05e47qdzhdma2y3ugn32lkgi972z9mpfzocjj6z1ro4ec&rid=giphy.gif&ct=g',\n\t'https://i.giphy.com/media/PAqjdPkJLDsmBRSYUp/giphy.webp'\n]\n\nconst { SystemProgram, Keypair } = web3;\n\n// Create a keypair for the account that will hold the GIF data.\nconst arr = Object.values(kp._keypair.secretKey)\nconst secret = new Uint8Array(arr)\nconst baseAccount = web3.Keypair.fromSecretKey(secret)\n\n\n// Get our program's id from the IDL file.\nconst programID = new PublicKey(idl.metadata.address);\n\n// Set our network to devnet.\nconst network = clusterApiUrl('devnet');\n\n// Controls how we want to acknowledge when a transaction is \"done\".\nconst opts = {\n  preflightCommitment: \"processed\",\n}\n\nconst App = () => {\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [gifList, setGifList] = useState([]);\n\n  const checkIfwalletIsConnected = async () => {\n    try{\n        const  { solana } = window;\n        if(solana){\n            if(solana.isPhantom){\n                console.log(\"Phantom wallet found!\");\n                const response = await solana.connect();\n                console.log(\n                  'Connected with Public Key:',\n                  response.publicKey.toString()\n                );\n                setWalletAddress(response.publicKey.toString())\n            }\n        }\n        else{\n                alert(\"Download phantom wallet extension\")\n        }\n    } catch(error){\n        console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    const onLoad = async () => {\n        await checkIfwalletIsConnected();\n    }\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n\n\n const getProvider = () => {\n        const connection = new Connection(network, opts.preflightCommitment);\n        const provider = new AnchorProvider(\n          connection, window.solana, opts.preflightCommitment,\n        );\n        return provider;\n    }\n\n\n  const getGifList = async() => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n      const account = await program.account.baseAccount.fetch(baseAccount.publicKey);\n\n      console.log(\"Got the account\", account)\n      setGifList(account.gifList)\n\n    } catch (error) {\n      console.log(\"Error in getGifList: \", error)\n      setGifList(null);\n    }\n  }\n\n  useEffect(() => {\n    if (walletAddress) {\n      console.log('Fetching GIF list...');\n      getGifList()\n    }\n  }, [walletAddress]);\n\n\n  const connectWallet = async () => {};\n\n  const sendGif = async () => {\n    if (inputValue.length === 0) {\n      console.log(\"No gif link given!\")\n      return\n    }\n    setInputValue('');\n    console.log('Gif link:', inputValue);\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n\n      await program.rpc.addGif(inputValue, {\n        accounts: {\n          baseAccount: baseAccount.publicKey,\n          user: provider.wallet.publicKey,\n        },\n      });\n      console.log(\"GIF successfully sent to program\", inputValue)\n\n      await getGifList();\n    } catch (error) {\n      console.log(\"Error sending GIF:\", error)\n    }\n  };\n\n    /*\n     * We want to render this UI when the user hasn't connected\n     * their wallet to our app yet.\n     */\n    const renderNotConnectedContainer = () => (\n      <button\n        className=\"cta-button connect-wallet-button\"\n        onClick={connectWallet}\n      >\n        Connect to Wallet\n      </button>\n    );\n\n    const onInputChange = (event) => {\n      const { value } = event.target;\n      setInputValue(value);\n    };\n\n\n\n    const createGifAccount = async () => {\n      try {\n        const provider = getProvider();\n        const program = new Program(idl, programID, provider);\n        console.log(\"ping\")\n        await program.rpc.startStuffOff({\n          accounts: {\n            baseAccount: baseAccount.publicKey,\n            user: provider.wallet.publicKey,\n            systemProgram: SystemProgram.programId,\n          },\n          signers: [baseAccount]\n        });\n        console.log(\"Created a new BaseAccount w/ address:\", baseAccount.publicKey.toString())\n        await getGifList();\n\n      } catch(error) {\n        console.log(\"Error creating BaseAccount account:\", error)\n      }\n    }\n\n   const renderConnectedContainer = () => {\n   // If we hit this, it means the program account hasn't been initialized.\n     if (gifList === null) {\n       return (\n         <div className=\"connected-container\">\n           <button className=\"cta-button submit-gif-button\" onClick={createGifAccount}>\n             Do One-Time Initialization For GIF Program Account\n           </button>\n         </div>\n       )\n     }\n   \t// Otherwise, we're good! Account exists. User can submit GIFs.\n   \telse {\n       return(\n         <div className=\"connected-container\">\n           <form\n             onSubmit={(event) => {\n               event.preventDefault();\n               sendGif();\n             }}\n           >\n             <input\n               type=\"text\"\n               placeholder=\"Enter gif link!\"\n               value={inputValue}\n               onChange={onInputChange}\n             />\n             <button type=\"submit\" className=\"cta-button submit-gif-button\">\n               Submit\n             </button>\n           </form>\n           <div className=\"gif-grid\">\n   \t\t\t\t\t{/* We use index as the key instead, also, the src is now item.gifLink */}\n             {gifList.map((item, index) => (\n               <div className=\"gif-item\" key={index}>\n                 <img src={item.gifLink} />\n               </div>\n             ))}\n           </div>\n         </div>\n       )\n     }\n   }\n\n  return (\n      <div className=\"App\">\n  \t\t\t{/* This was solely added for some styling fanciness */}\n  \t\t\t<div className={walletAddress ? 'authed-container' : 'container'}>\n          <div className=\"header-container\">\n            <p className=\"header\">🖼 GIF Portal</p>\n            <p className=\"sub-text\">\n              View your GIF collection in the metaverse ✨\n            </p>\n            {/* Add the condition to show this only if we don't have a wallet address */}\n            {!walletAddress ? renderNotConnectedContainer() : renderConnectedContainer() }\n          </div>\n          <div className=\"footer-container\">\n            <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n            <a\n              className=\"footer-text\"\n              href={TWITTER_LINK}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >{`built on @${TWITTER_HANDLE}`}</a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}