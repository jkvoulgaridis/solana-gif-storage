{"ast":null,"code":"var _jsxFileName = \"/home/john/personal/solana-learnings/frontend-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport twitterLogo from './assets/twitter-logo.svg'; // Constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const checkIfwalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log(\"Phantom wallet found!\");\n          const response = await solana.connect();\n          console.log('Connected with Public Key:', response.publicKey.toString());\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert(\"Download phantom wallet extension\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfwalletIsConnected();\n    };\n\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n\n  const connectWallet = async () => {};\n  /*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */\n\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    onClick: connectWallet,\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: walletAddress ? 'authed-container' : 'container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header\",\n          children: \"\\uD83D\\uDDBC GIF Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"View your GIF collection in the metaverse \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), !walletAddress && renderNotConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"FzBUXhdaz8WdQW5Q+ejK8XBThPU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useState","twitterLogo","TWITTER_HANDLE","TWITTER_LINK","App","walletAddress","setWalletAddress","checkIfwalletIsConnected","solana","window","isPhantom","console","log","response","connect","publicKey","toString","alert","error","onLoad","addEventListener","removeEventListener","connectWallet","renderNotConnectedContainer"],"sources":["/home/john/personal/solana-learnings/frontend-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const checkIfwalletIsConnected = async () => {\n    try{\n        const  { solana } = window;\n        if(solana){\n            if(solana.isPhantom){\n                console.log(\"Phantom wallet found!\");\n                const response = await solana.connect();\n                console.log(\n                  'Connected with Public Key:',\n                  response.publicKey.toString()\n                );\n                setWalletAddress(response.publicKey.toString())\n            }\n        }\n        else{\n                alert(\"Download phantom wallet extension\")\n        }\n    } catch(error){\n        console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    const onLoad = async () => {\n        await checkIfwalletIsConnected();\n    }\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n\n  const connectWallet = async () => {};\n\n    /*\n     * We want to render this UI when the user hasn't connected\n     * their wallet to our app yet.\n     */\n    const renderNotConnectedContainer = () => (\n      <button\n        className=\"cta-button connect-wallet-button\"\n        onClick={connectWallet}\n      >\n        Connect to Wallet\n      </button>\n    );\n\n  return (\n      <div className=\"App\">\n  \t\t\t{/* This was solely added for some styling fanciness */}\n  \t\t\t<div className={walletAddress ? 'authed-container' : 'container'}>\n          <div className=\"header-container\">\n            <p className=\"header\">ðŸ–¼ GIF Portal</p>\n            <p className=\"sub-text\">\n              View your GIF collection in the metaverse âœ¨\n            </p>\n            {/* Add the condition to show this only if we don't have a wallet address */}\n            {!walletAddress && renderNotConnectedContainer()}\n          </div>\n          <div className=\"footer-container\">\n            <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n            <a\n              className=\"footer-text\"\n              href={TWITTER_LINK}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >{`built on @${TWITTER_HANDLE}`}</a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  export default App;"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;;AACA,MAAMC,cAAc,GAAG,aAAvB;AACA,MAAMC,YAAY,GAAI,uBAAsBD,cAAe,EAA3D;;AAEA,MAAME,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;;EAEA,MAAMO,wBAAwB,GAAG,YAAY;IAC3C,IAAG;MACC,MAAO;QAAEC;MAAF,IAAaC,MAApB;;MACA,IAAGD,MAAH,EAAU;QACN,IAAGA,MAAM,CAACE,SAAV,EAAoB;UAChBC,OAAO,CAACC,GAAR,CAAY,uBAAZ;UACA,MAAMC,QAAQ,GAAG,MAAML,MAAM,CAACM,OAAP,EAAvB;UACAH,OAAO,CAACC,GAAR,CACE,4BADF,EAEEC,QAAQ,CAACE,SAAT,CAAmBC,QAAnB,EAFF;UAIAV,gBAAgB,CAACO,QAAQ,CAACE,SAAT,CAAmBC,QAAnB,EAAD,CAAhB;QACH;MACJ,CAVD,MAWI;QACIC,KAAK,CAAC,mCAAD,CAAL;MACP;IACJ,CAhBD,CAgBE,OAAMC,KAAN,EAAY;MACVP,OAAO,CAACC,GAAR,CAAYM,KAAZ;IACH;EACF,CApBD;;EAsBAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,MAAM,GAAG,YAAY;MACvB,MAAMZ,wBAAwB,EAA9B;IACH,CAFD;;IAGAE,MAAM,CAACW,gBAAP,CAAwB,MAAxB,EAAgCD,MAAhC;IACA,OAAO,MAAMV,MAAM,CAACY,mBAAP,CAA2B,MAA3B,EAAmCF,MAAnC,CAAb;EACD,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMG,aAAa,GAAG,YAAY,CAAE,CAApC;EAEE;AACJ;AACA;AACA;;;EACI,MAAMC,2BAA2B,GAAG,mBAClC;IACE,SAAS,EAAC,kCADZ;IAEE,OAAO,EAAED,aAFX;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;;EASF,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBAED;MAAK,SAAS,EAAEjB,aAAa,GAAG,kBAAH,GAAwB,WAArD;MAAA,wBACK;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAG,SAAS,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,SAAS,EAAC,UAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,EAMG,CAACA,aAAD,IAAkBkB,2BAA2B,EANhD;MAAA;QAAA;QAAA;QAAA;MAAA,QADL,eASK;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAK,GAAG,EAAC,cAAT;UAAwB,SAAS,EAAC,cAAlC;UAAiD,GAAG,EAAEtB;QAAtD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,SAAS,EAAC,aADZ;UAEE,IAAI,EAAEE,YAFR;UAGE,MAAM,EAAC,QAHT;UAIE,GAAG,EAAC,YAJN;UAAA,UAKG,aAAYD,cAAe;QAL9B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATL;IAAA;MAAA;MAAA;MAAA;IAAA;EAFC;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBC,CAxEH;;GAAME,G;;KAAAA,G;AA0EJ,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}